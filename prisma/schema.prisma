// This is your Prisma schema file
generator client {
  provider = "prisma-client-py"
  interface = "sync"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  USER
  ADMIN
}

enum AuthProvider {
  EMAIL
  GOOGLE
  APPLE
}

model User {
  id             String        @id @default(uuid())
  email          String        @unique
  name           String?
  avatar         String?
  role           Role          @default(USER)
  authProvider   AuthProvider
  authProviderId String?       // External ID from auth provider
  passwordHash   String?       // For email/password auth
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  
  // Relationships
  ownedChats     Chat[]        @relation("ChatOwner")
  messages       Message[]
  chatParticipants ChatParticipant[]
  
  @@index([email])
}

model Chat {
  id          String      @id @default(uuid())
  title       String
  description String?
  isGroup     Boolean     @default(false)
  ownerId     String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  
  // Relationships
  owner       User        @relation("ChatOwner", fields: [ownerId], references: [id], onDelete: Cascade)
  messages    Message[]
  participants ChatParticipant[]
  
  @@index([ownerId])
}

model ChatParticipant {
  id        String   @id @default(uuid())
  chatId    String
  userId    String
  joinedAt  DateTime @default(now())
  
  // Relationships
  chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([chatId, userId])
  @@index([userId])
  @@index([chatId])
}

model Message {
  id        String   @id @default(uuid())
  content   String
  isRead    Boolean  @default(false)
  chatId    String
  userId    String
  isAI      Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relationships
  chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([chatId])
  @@index([userId])
}